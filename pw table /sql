# Define connection parameters
$server   = "Sal"               # SQL Server name or address
$database = "YourDatabase"      # Name of your database
$username = "YourSQLUser"       # SQL Server login name
$password = "YourSQLPassword"   # SQL Server login password

# Define the query (adjust the table name as needed)
$query = "SELECT [Schema], [refresh], [tables] FROM YourTableName"

# Build the connection string for SQL Server authentication
$connectionString = "Server=$server;Database=$database;User Id=$username;Password=$password;"

# Create a new SQL connection object
$connection = New-Object System.Data.SqlClient.SqlConnection($connectionString)

try {
    # Open the connection
    $connection.Open()
    Write-Output "Connection opened successfully."

    # Create a SQL command object with the query
    $command = $connection.CreateCommand()
    $command.CommandText = $query

    # Use a DataAdapter to fill a DataTable with the query results
    $adapter = New-Object System.Data.SqlClient.SqlDataAdapter($command)
    $dataTable = New-Object System.Data.DataTable
    $adapter.Fill($dataTable) | Out-Null

    # Construct an array that contains a distinct list of table names
    # Extract the "tables" column from each row, sort, and remove duplicates
    $distinctTables = $dataTable | Select-Object -ExpandProperty tables | Sort-Object -Unique

    # Print the distinct table names
    Write-Output "Distinct list of tables:"
    $distinctTables
}
catch {
    Write-Error "An error occurred: $_"
}
finally {
    # Always close the connection
    $connection.Close()
    Write-Output "Connection closed."
}